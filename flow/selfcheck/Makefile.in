
SELFCHECK_DIR = $(SOC_WORK)/selfcheck
SELFCHECK_SRCS= $(SOC_HOME)/verif/selfcheck/

SELFCHECK_SHARED_DIR = $(SOC_HOME)/verif/selfcheck/share
SELFCHECK_SHARED_SRC = $(wildcard $(SELFCHECK_SHARED_DIR)/*.S) \
                       $(wildcard $(SELFCHECK_SHARED_DIR)/*.c)

SELFCHECK_BL_DIR = $(SELFCHECK_DIR)/bootloader
SELFCHECK_BL_SRC = $(SOC_HOME)/verif/selfcheck/bootloader/bootloader.S
SELFCHECK_BL_OBJ = $(SELFCHECK_DIR)/bootloader/bootloader.obj
SELFCHECK_BL_HEX = $(SELFCHECK_DIR)/bootloader/bootloader.hex
SELFCHECK_BL_BIN = $(SELFCHECK_DIR)/bootloader/bootloader.bin
SELFCHECK_BL_DIS = $(SELFCHECK_DIR)/bootloader/bootloader.dis
SELFCHECK_BL_GTKW= $(SELFCHECK_DIR)/bootloader/bootloader.gtkwl

SELFCHECK_LINK_BOOT = $(SOC_HOME)/flow/selfcheck/boot-link.ld
SELFCHECK_LINK_TEST = $(SOC_HOME)/flow/selfcheck/test-link.ld

SELFCHECK_CFLAGS = -nostartfiles -Os -O2 -Wall
SELFCHECK_CFLAGS += -march=rv32imc -mabi=ilp32
SELFCHECK_CFLAGS += -I$(SELFCHECK_SHARED_DIR)

# Allow overriding from command line as to whether selfchecking tests
# dump waves.
SELFCHECK_WAVES  ?=0

# These are determined by building the selfcheck test bootloader and
# looking for <_bl_test_pass/fail>
SELFCHECK_PASS_ADDR = 0x10000002
SELFCHECK_FAIL_ADDR = 0x10000004

SELFCHECK_TIMEOUT   = 10000

$(SELFCHECK_BL_OBJ) : $(SELFCHECK_BL_SRC)
	@mkdir -p $(dir $@)
	$(CC) -T$(SELFCHECK_LINK_BOOT) $(SELFCHECK_CFLAGS) -o $@ $^

$(SELFCHECK_BL_DIS) : $(SELFCHECK_BL_OBJ)
	@mkdir -p $(dir $@)
	$(OBJDUMP) -z -D $< > $@

$(SELFCHECK_BL_HEX) : $(SELFCHECK_BL_OBJ)
	@mkdir -p $(dir $@)
	$(OBJCOPY) --change-addresses=0xF0000000 $(OBJCOPY_HEX_ARGS) -O verilog $< $@

$(SELFCHECK_BL_BIN) : $(SELFCHECK_BL_OBJ)
	@mkdir -p $(dir $@)
	$(OBJCOPY) --change-addresses=0xF0000000 $(OBJCOPY_HEX_ARGS) -O binary $< $@

$(SELFCHECK_BL_GTKW) : $(SELFCHECK_BL_DIS)
	grep "100.*:	" $(SELFCHECK_BL_DIS) \
        | grep -v ">:" | cut -c 10- | sed 's/\t//' \
        | sort | uniq | sed 's/ +/ /' | sed 's/\t/ /' \
        | sed 's/\(^....    \)    /0000\1/' \
        > $@

SELFCHECK_TESTS  = $(wildcard $(SOC_HOME)/verif/selfcheck/test_*)
SELFCHECK_RUN_TARGETS =

selfcheck-bootloader:   $(SELFCHECK_BL_OBJ)  \
                        $(SELFCHECK_BL_HEX)  \
                        $(SELFCHECK_BL_BIN)  \
                        $(SELFCHECK_BL_DIS)  \
                        $(SELFCHECK_BL_GTKW)

define map_selfcheck_test_name
$(strip $(subst $(SELFCHECK_SRCS),,${1}))
endef

define map_selfcheck_dir
$(SELFCHECK_DIR)/$(call map_selfcheck_test_name,${1})
endef

define map_selfcheck_vl_dir
$(call map_selfcheck_dir,${1})/vl
endef

define map_selfcheck_vl_out
$(call map_selfcheck_dir,${1})/verilated
endef

define map_selfcheck_elf
$(call map_selfcheck_dir,${1})/$(call map_selfcheck_test_name,${1}).elf
endef

define map_selfcheck_dis
$(call map_selfcheck_dir,${1})/$(call map_selfcheck_test_name,${1}).dis
endef

define map_selfcheck_hex
$(call map_selfcheck_dir,${1})/$(call map_selfcheck_test_name,${1}).hex
endef

define map_selfcheck_bin
$(call map_selfcheck_dir,${1})/$(call map_selfcheck_test_name,${1}).bin
endef

define map_selfcheck_gtkwl
$(call map_selfcheck_dir,${1})/$(call map_selfcheck_test_name,${1}).gtkwl
endef

define map_selfcheck_vcd
$(call map_selfcheck_dir,${1})/$(call map_selfcheck_test_name,${1}).vcd
endef

ifeq ($(SELFCHECK_WAVES),1)
define map_selfcheck_waves
+WAVES=$(call map_selfcheck_vcd,${1})
endef
endif

define map_selfcheck_srcs
$(wildcard ${1}/*)
endef

#
# Add a new set of targets for building and running a selfchecking test.
#
# Args:
# 0 - The folder path of the test sources.
#
define add_target_selfcheck_test

$(call map_selfcheck_elf,${1}) : $(call map_selfcheck_srcs,${1}) $(SELFCHECK_SHARED_SRC)
	@mkdir -p $(call map_selfcheck_dir,${1})
	$(CC) -T$(SELFCHECK_LINK_TEST) $(SELFCHECK_CFLAGS) -o $${@} $${^}

$(call map_selfcheck_dis,${1}) : $(call map_selfcheck_elf,${1})
	@mkdir -p $(call map_selfcheck_dir,${1})
	$(OBJDUMP) -z -D $${<} > $${@}

$(call map_selfcheck_hex,${1}) : $(call map_selfcheck_elf,${1})
	@mkdir -p $(dir $${@})
	$(OBJCOPY) --change-addresses=0xE0000000 $(OBJCOPY_HEX_ARGS) -O verilog $${<} $${@}

$(call map_selfcheck_bin,${1}) : $(call map_selfcheck_elf,${1})
	@mkdir -p $(dir $${@})
	$(OBJCOPY) --change-addresses=0xE0000000 --gap-fill 0 -O binary $${<} $${@}

$(call map_selfcheck_gtkwl,${1})  : $(call map_selfcheck_dis,${1}) $(SELFCHECK_BL_GTKW)
	grep "200.*:	" $(call map_selfcheck_dis,${1}) \
        | grep -v ">:" | cut -c 10- | sed 's/\t//' \
        | sort | uniq | sed 's/ +/ /' | sed 's/\t/ /' \
        | sed 's/\(^....    \)    /0000\1/' \
        > $(call map_selfcheck_gtkwl,${1})
	cat $(SELFCHECK_BL_GTKW) >>  $(call map_selfcheck_gtkwl,${1})

$(call tgt_verilator_build,\
$(call map_selfcheck_vl_out,${1}),\
$(call map_selfcheck_vl_dir,${1}),\
$(SELFCHECK_BL_HEX),\
$(call map_selfcheck_hex,${1}))

$(call map_selfcheck_vl_out,${1}) : selfcheck-bootloader $(call map_selfcheck_hex,${1})

selfcheck-build-$(call map_selfcheck_test_name,${1}) : \
    $(call map_selfcheck_elf,${1}) \
    $(call map_selfcheck_dis,${1}) \
    $(call map_selfcheck_hex,${1}) \
    $(call map_selfcheck_bin,${1}) \
    $(call map_selfcheck_gtkwl,${1})

selfcheck-run-$(call map_selfcheck_test_name,${1}) : selfcheck-build-$(call map_selfcheck_test_name,${1}) $(call map_selfcheck_vl_out,${1})
	$(call map_selfcheck_vl_out,${1}) $(call map_selfcheck_waves,${1}) \
        +PASS_ADDR=$(SELFCHECK_PASS_ADDR) \
        +FAIL_ADDR=$(SELFCHECK_FAIL_ADDR) \
        +TIMEOUT=$(SELFCHECK_TIMEOUT)

SELFCHECK_RUN_TARGETS += selfcheck-run-$(call map_selfcheck_test_name,${1})

endef

#
# TODO: Re-instate the selfchecking tests
#
#$(foreach TEST,$(SELFCHECK_TESTS),\
#    $(eval $(call add_target_selfcheck_test,$(TEST)))\
#)

selfcheck-run-all: $(SELFCHECK_RUN_TARGETS)

