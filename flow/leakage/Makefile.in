
SCOPE_CFG     =$(SOC_HOME)/flow/leakage/picoscope5000.cfg
SCOPE_CHANNEL = B
TT_CAPTURE    =$(SOC_HOME)/extern/fw-acquisition/bin/ttest_capture.py
TT_ANALYSE    =$(SOC_HOME)/extern/fw-acquisition/bin/ttest_analyse.py

LKG_WORK      = $(SOC_WORK)/leakage

NUM_TRACES    = 10000

LKG_TARGETS   =

# 1. leakage binary file
define map_lkg_tgt
$(notdir $(basename ${1}))
endef

# 1. leakage binary file
define map_lkg_dir
$(LKG_WORK)/$(call map_lkg_tgt,${1})
endef

# 1. leakage binary file
define map_lkg_traces
$(call map_lkg_dir,${1})/$(call map_lkg_tgt,${1})-smax-$(SME_SMAX)-traces.npy
endef

# 1. leakage binary file
define map_lkg_fixed
$(call map_lkg_dir,${1})/$(call map_lkg_tgt,${1})-smax-$(SME_SMAX)-fixed.npy
endef

# 1. leakage binary file
define map_lkg_log
$(call map_lkg_dir,${1})/$(call map_lkg_tgt,${1})-smax-$(SME_SMAX)-capture.log
endef

# 1. leakage binary file
define map_lkg_ttest_graph
$(call map_lkg_dir,${1})/../$(call map_lkg_tgt,${1})-smax-$(SME_SMAX)-ttest.png
endef

#
# 1. Leakage binary file
define add_lkg_targets

$(call map_lkg_traces,${1}) : ${1}
	$(MAKE) -C $(SOC_HOME) xilinx-upload-binary BINARY=$${<}
	@mkdir -p $(call map_lkg_dir,${1})
	$(TT_CAPTURE) \
        $(PORT) \
        $(SCOPE_CFG) \
        $(SCOPE_CHANNEL) \
        $(call map_lkg_traces,${1}) \
        $(call map_lkg_fixed,${1}) \
        --baud $(BAUD) \
        --logfile $(call map_lkg_log,${1}) \
        --num-traces $(NUM_TRACES) \
        --zero-fixed

lkg-capture-$(call map_lkg_tgt,${1}): $(call map_lkg_traces,${1})

lkg-analysis-$(call map_lkg_tgt,${1}): $(call map_lkg_traces,${1})
	$(TT_ANALYSE) \
        --avg --abs  \
        --graph-ttest $(call map_lkg_ttest_graph,${1}) \
        $(call map_lkg_fixed,${1}) \
        $(call map_lkg_traces,${1})

LKG_TARGETS  += lkg-analysis-$(call map_lkg_tgt,${1})

endef

$(eval $(call add_lkg_targets,$(call map_sw_example_bin,sme-xor)))
$(eval $(call add_lkg_targets,$(call map_sw_example_bin,sme-and)))
$(eval $(call add_lkg_targets,$(call map_sw_example_bin,sme-aes32es)))
$(eval $(call add_lkg_targets,$(call map_sw_example_bin,sme-aes32esm)))
$(eval $(call add_lkg_targets,$(call map_sw_example_bin,sme-aes128-ks)))
$(eval $(call add_lkg_targets,$(call map_sw_example_bin,sme-aes128-enc)))

lkg-analysis-all: $(LKG_TARGETS)

